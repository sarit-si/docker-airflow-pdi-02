version: '3'

x-airflow-pdi-common:
  &airflow-pdi-common
  build: ./setup-airflow-pdi
  image: airflow-pdi
  environment:
    &airflow-pdi-common-env
    HOST_ENV: ${HOST_ENV}
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-database/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-database/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@airflow-broker:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    PENTAHO_DI_JAVA_OPTIONS: ${PENTAHO_DI_JAVA_OPTIONS}
  volumes:
    # Airflow
    - ./source-code/dags:/opt/airflow/dags
    - ./setup-airflow-pdi/plugins:/opt/airflow/plugins
    - ./setup-airflow-pdi/logs/airflow:/opt/airflow/logs
    - ./setup-airflow-pdi/airflow.cfg:/opt/airflow/airflow.cfg
    # PDI
    - ./source-code/ktrs:/opt/airflow/ktrs
    - ./setup-airflow-pdi/logs/pdi:/opt/data-integration/logs
    - ./setup-airflow-pdi/kettle-properties/${HOST_ENV:-localhost}-kettle.properties:/opt/data-integration/.kettle/kettle.properties
    - ./setup-airflow-pdi/simple-jndi:/opt/data-integration/simple-jndi
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  depends_on:
    airflow-broker:
      condition: service_healthy
    airflow-database:
      condition: service_healthy

services:
# Airflow-DB
  airflow-database:
    image: postgres:13
    container_name: airflow-database
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

# Airflow-messenger
  airflow-broker:
    image: redis:latest
    container_name: airflow-broker
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

# Airflow-webserver
  airflow-webserver:
    <<: *airflow-pdi-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - ${AIRFLOW_HOST_PORT:-8080}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${AIRFLOW_HOST_PORT:-8080}/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

# Airflow-scheduler
  airflow-scheduler:
    <<: *airflow-pdi-common
    container_name: airflow-scheduler
    command: scheduler
    restart: always

# Airflow-worker
  airflow-worker:
    <<: *airflow-pdi-common
    command: celery worker
    restart: always

# Airflow-DB-initialize
  airflow-init:
    <<: *airflow-pdi-common
    container_name: airflow-init
    command: version
    environment:
      <<: *airflow-pdi-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD:-airflow}
      _AIRFLOW_WWW_USER_EMAIL: ${AIRFLOW_ADMIN_EMAIL:-admin@admin.com}

volumes:
  postgres-db-volume: